@page "/contacts"
@inject HttpClient Http

<h2>Lista kontaktów</h2>

@if (contacts == null)
{
    <p><em>Ładowanie...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Imię</th>
                <th>Nazwisko</th>
                <th>Email</th>
                <th>Kategoria</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in contacts)
            {
                <tr>
                    <td>@c.FirstName</td>
                    <td>@c.LastName</td>
                    <td>@c.Email</td>
                    <td>@c.Category</td>
                    <td>
                        <a href="/contacts/@c.Id">Szczegóły</a> |
                        <a href="/contacts/edit/@c.Id">Edytuj</a> |
                        <button @onclick ="() => DeleteContact(c.Id)">Usuń</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ContactDto>
    ? contacts;

    protected override async Task OnInitializedAsync()
    {
    contacts = await Http.GetFromJsonAsync<List<ContactDto>>("api/contacts");
    }

    private async Task DeleteContact(int id)
    {
        var response = await Http.DeleteAsync($"api/contacts/{id}");
        if (response.IsSuccessStatusCode)
        {
            contacts = contacts.Where(c => c.Id != id).ToList();
        }
    }
}
